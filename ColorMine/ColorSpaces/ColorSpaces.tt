<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import Namespace="System.Xml" #>
<#@ import Namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#
	var document = new XmlDocument();
	var file = Host.ResolvePath("ColorSpaces.xml");
	document.Load(file);
	var colorSpaces = document.SelectNodes("colorSpaces/colorSpace");
#>
<#@ output extension=".cs" #>//Note: This is a generated file.
using ColorMine.ColorSpaces.Conversions;

namespace ColorMine.ColorSpaces
{
<# foreach (XmlNode space in colorSpaces) {
var spaceName = space.Attributes["name"].Value;
var points = space.SelectNodes("dataPoints/dataPoint");#>
	public interface I<#=spaceName#> : IColorSpace
    {
<# foreach(XmlNode  point in points) { #>
		double <#=point.Attributes["label"].Value#> { get; set; }
<# } #>
    }

    public class <#=spaceName#> : ColorSpace, I<#=spaceName#>
    {
<# foreach(XmlNode point in points) { #>
		public double <#=point.Attributes["label"].Value#> { get; set; }
<# } #>

        public override void Initialize(IRgb color)
        {
            <#=spaceName#>Converter.ToColorSpace(color,this);
        }

        public override IRgb ToRgb()
        {
            return <#=spaceName#>Converter.ToColor(this);
        }
    }

<# } #>
}